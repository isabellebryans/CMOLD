@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xs:   <http://www.w3.org/2001/XMLSchema#> .
@prefix : <http://example.org/chess/>.
@prefix sh: <http://www.w3.org/ns/shacl#>.

# At most one chess piece on each tile
# :contains must be equal to :isIn
:atMostOne
    a sh:NodeShape ;
    sh:targetClass :tile;
    sh:property [
                sh:path :contains;
                sh:maxCount 1;
                sh:class :ChessPiece;
                sh:message "Tile"].

# Validates that there are always exactly two kings in the game.
# Validates that there must be one white king and one black king.
:TwoKings
    a sh:NodeShape ;
    sh:targetNode :King;
    sh:property [
                sh:message "Not exactly 1 white king and 1 black king";
                sh:path [sh:inversePath rdf:type ];
                sh:minCount 2;
                sh:maxCount 2;
                sh:qualifiedValueShape [
                                       sh:path :colour;
                                       sh:hasValue :white;] ;
                sh:qualifiedMaxCount 1;
                sh:qualifiedMinCount 1].


# Validates there are always 32 chess pieces in the game, exactly 16 white and 16 black
:NumberOfChessPieces
    a sh:NodeShape ;
    sh:targetNode :ChessPiece;
    sh:property [
                    sh:path [sh:inversePath rdf:type ];
                    sh:minCount 32;
                    sh:maxCount 32;
                    sh:qualifiedValueShape [
                                               sh:path :colour;
                                               sh:hasValue :white;] ;
                    sh:qualifiedMaxCount 16;
                    sh:qualifiedMinCount 16].

:NumberOfPawns
    a sh:NodeShape ;
    sh:targetNode :Pawn;
    sh:property [
                    sh:path [sh:inversePath rdf:type ];
                    sh:maxCount 16;
                    sh:qualifiedValueShape [
                                sh:path :colour;
                                sh:hasValue :white;] ;
                    sh:qualifiedMaxCount 8;
                    sh:qualifiedValueShape [
                                               sh:path :colour;
                                               sh:hasValue :black;] ;
                    sh:qualifiedMaxCount 8;].


:NumberOfQueens
    a sh:NodeShape ;
    sh:targetNode :Queen;
    sh:property [
                    sh:path [sh:inversePath rdf:type ];
                    sh:minCount 2;
                    sh:maxCount 18;
                    sh:qualifiedValueShape [
                                                              sh:path :colour;
                                                              sh:hasValue :white;] ;
                    sh:qualifiedMinCount 1;
                    sh:qualifiedMaxCount 9;
                    sh:qualifiedValueShape [
                                               sh:path :colour;
                                               sh:hasValue :black;] ;
                    sh:qualifiedMinCount 1;
                    sh:qualifiedMaxCount 9;].


# every piece must be either black or white
:PieceShape
    a sh:NodeShape ;
    sh:targetClass :ChessPiece ;
    sh:property [
          sh:path :colour ;
          sh:in (:black :white);
            sh:minCount 1;
            sh:maxCount 1;
      ] .

# Kings never captured, always on the board
# 2 Kings cannot be beside eachother
:KingShape
    a sh:NodeShape ;
    sh:targetClass :King;
    sh:property [
                sh:path :isIn;
                sh:class :tile;
                sh:minCount 1;

                ];

          sh:property [
                          sh:path :isIn;
                          sh:message "Kings beside eachother";
                          sh:node[
                                      sh:property [
                                                      sh:message "Kings not beside eachother";
                                                  sh:path :right;
                                                  sh:node[
                                                          sh:not[ sh:path :contains;
                                                                 sh:class :King;
                                                                  sh:minCount 1;
                                                                     ]]];
                                      sh:property [
                                                      sh:message "Kings not beside eachother";
                                                      sh:path :left;
                                                      sh:node[
                                                                     sh:not[ sh:path :contains;
                                                                             sh:class :King;
                                                                             sh:minCount 1;
                                                                           ]]];
                                      sh:property [
                                                      sh:message "Kings not beside eachother";
                                                      sh:path :above;
                                                      sh:node[
                                                                     sh:not[ sh:path :contains;
                                                                             sh:class :King;
                                                                             sh:minCount 1;
                                                                           ]]];
                                      sh:property [
                                                      sh:message "Kings not beside eachother";
                                                      sh:path :below;
                                                      sh:node[
                                                                     sh:not[ sh:path :contains;
                                                                             sh:class :King;
                                                                             sh:minCount 1;
                                                                           ]]];
                                      sh:property [
                                                      sh:message "Kings not beside eachother";
                                                      sh:path :tr;
                                                      sh:node[
                                                                     sh:not[ sh:path :contains;
                                                                             sh:class :King;
                                                                             sh:minCount 1;
                                                                           ]]];
                                      sh:property [
                                                      sh:message "Kings not beside eachother";
                                                      sh:path :tl;
                                                      sh:node[
                                                                     sh:not[ sh:path :contains;
                                                                             sh:class :King;
                                                                             sh:minCount 1;
                                                                           ]]];
                                      sh:property [
                                                      sh:message "Kings not beside eachother";
                                                      sh:path :br;
                                                      sh:node[
                                                                     sh:not[ sh:path :contains;
                                                                             sh:class :King;
                                                                             sh:minCount 1;
                                                                           ]]];
                                      sh:property [
                                                      sh:message "Kings not beside eachother";
                                                      sh:path :bl;
                                                      sh:node[
                                                                     sh:not[ sh:path :contains;
                                                                             sh:class :King;
                                                                             sh:minCount 1;
                                                                           ]]];

                                 ] ] .